defaults: &defaults
  working_directory: /home/circleci/project

tf: &tf
  docker:
    - image: google/cloud-sdk:latest

prepare-gcp-service-account-json: &prepare-gcp-service-account-json
  name: Dump Google Cloud Credentials to file
  command: |
    echo ${GOOGLE_SERVICE_ACCOUNT_JSON} > /tmp/gcp-service-account.json
    gcloud auth activate-service-account --key-file /tmp/gcp-service-account.json

setup: &setup
  name: Setup
  command: |
    apt -qy update && apt install -y wget unzip

install-terraform: &install-terraform
  name: Install terraform
  command: |
    wget https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip -P /tmp
    unzip /tmp/terraform_0.11.13_linux_amd64.zip -d /usr/local/bin/

install-tfnotify: &install-tfnotify
  name: Install tfnotify
  command: |
    wget https://github.com/mercari/tfnotify/releases/download/v0.3.0/tfnotify_v0.3.0_linux_amd64.tar.gz -P /tmp
    tar zxvf /tmp/tfnotify_v0.3.0_linux_amd64.tar.gz
    cp tfnotify_v0.3.0_linux_amd64/tfnotify /usr/local/bin/tfnotify
    rm -rf tfnotify_v0.3.0_linux_amd64.tar.gz tfnotify_v0.3.0_linux_amd64

install-gcloud: &install-gcloud
  name: Install gcloud
  command: |
    wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-231.0.0-linux-x86_64.tar.gz -P /tmp
    tar zxvf google-cloud-sdk-231.0.0-linux-x86_64.tar.gz
    cp google-cloud-sdk/bin/gcloud /usr/local/bin/gcloud
    rm -rf google-cloud-sdk-231.0.0-linux-x86_64.tar.gz google-cloud-sdk

setup-gcloud-gke: &setup-gcloud-gke
  name: Setup kubeconfig
  command: |
    # gcloud container clusters get-credentials manchester --zone="asia-northeast1-b" --project="msmini-manchester"
    mkdir /msmini
    # mv $HOME/.kube/config /msmini/kubeconfig

version: 2
jobs:
  plan-ms:
    <<: *defaults
    <<: *tf
    steps:
      - checkout
      - run:
          <<: *setup
      - run:
          <<: *install-terraform
      - run:
          <<: *install-tfnotify
      - run:
          <<: *prepare-gcp-service-account-json
      - run:
          <<: *setup-gcloud-gke
      - run:
          name: Run plan
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp-service-account.json"
            terraform fmt -diff=true -check=true
            ./scripts/plan terraform/microservices
  apply-ms:
    <<: *defaults
    <<: *tf
    steps:
      - checkout
      - run:
          <<: *setup
      - run:
          <<: *install-terraform
      - run:
          <<: *install-tfnotify
      - run:
          <<: *prepare-gcp-service-account-json
      - run:
          <<: *setup-gcloud-gke
      - run:
          name: Run apply
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp-service-account.json"
            ./scripts/apply terraform/microservices
  plan-pl:
    <<: *defaults
    <<: *tf
    steps:
      - checkout
      - run:
          <<: *setup
      - run:
          <<: *install-terraform
      - run:
          <<: *install-tfnotify
      - run:
          <<: *prepare-gcp-service-account-json
      - run:
          <<: *setup-gcloud-gke
      - run:
          name: Run plan
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp-service-account.json"
            terraform fmt -diff=true -check=true
            ./scripts/plan terraform/platform
  apply-pl:
    <<: *defaults
    <<: *tf
    steps:
      - checkout
      - run:
          <<: *setup
      - run:
          <<: *install-terraform
      - run:
          <<: *install-tfnotify
      - run:
          <<: *prepare-gcp-service-account-json
      - run:
          <<: *setup-gcloud-gke
      - run:
          name: Run apply
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp-service-account.json"
            ./scripts/apply terraform/platform

workflows:
  version: 2
  terraform:
    jobs:
      - plan-ms:
          filters:
            branches:
              ignore: master
      - apply-ms:
          filters:
            branches:
              only: master
      - plan-pl:
          filters:
            branches:
              ignore: master
      - apply-pl:
          filters:
            branches:
              only: master
